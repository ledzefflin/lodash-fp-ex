import r from"lodash/fp";function e(r,e,n,t,i,c,s){try{var o=r[c](s),u=o.value}catch(r){return void n(r)}o.done?e(u):Promise.resolve(u).then(t,i)}function n(r){return function(){var n=this,t=arguments;return new Promise((function(i,c){var s=r.apply(n,t);function o(r){e(s,i,c,o,u,"next",r)}function u(r){e(s,i,c,o,u,"throw",r)}o(void 0)}))}}const t=e=>r.isFunction(r.get("then",e))&&r.isFunction(r.get("catch",e)),i=(e,...n)=>{const i=r.cond([[r.isFunction,()=>((r,...e)=>new Promise(((n,t)=>{try{n(r(...e))}catch(r){t(r)}})))(e,...n)],[t,r.identity],[r.T,r=>Promise.resolve(r)]]);return i(e)},c=r=>t(r)?r.then((r=>c(r))):r,s=r.curry(((r,e)=>i(e).then(c(r)))),o=r.curry(((r,e)=>i(e).catch(c(r)))),u=r.curry(((r,e)=>i(e).finally(c(r)))),a=r=>!r,p=r.pipe(r.isEmpty,a),y=r.curry(((e,n,t,i)=>{const c=r.curry(((e,n,t,i)=>i?r.isFunction(e)?e(t):e:r.isFunction(n)?n(t):n));var s;return c(n,t,i,(s=e,r.isNil(s)?r.identity:s)(i))})),l=r.curry(((r,e)=>e instanceof r)),f=r.pipe(r.camelCase,r.upperFirst),d=r.curry(function(){var e=n((function*(e,t){const c=r.pipe(r.flatMapDeep(r.pipe(e,i)),function(){var r=n((function*(r){return yield Promise.all(r)}));return function(e){return r.apply(this,arguments)}}());return yield c(t)}));return function(r,n){return e.apply(this,arguments)}}()),h=r.curry(function(){var e=n((function*(e,t){const i=r.pipe(d(function(){var r=n((function*(r){return!!(yield e(r))&&r}));return function(e){return r.apply(this,arguments)}}()),s(r.filter(r.pipe(r.equals(!1),a))));return yield i(t)}));return function(r,n){return e.apply(this,arguments)}}()),m=r.curry(function(){var e=n((function*(e,n){const t=r.pipe(d(e),s(r.indexOf(!0)),s((e=>r.get(`[${e}]`,n))),o(r.always(void 0)));return yield t(n)}));return function(r,n){return e.apply(this,arguments)}}()),v=r.curry(((e,n,t)=>{const i=Promise.resolve(n);return r.reduce(e,i,t)})),N=r.curry(function(){var e=n((function*(e,n){const t=[],i=r.entries(n);for(const r of i)t.push(yield e(r[1],r[0]));return t}));return function(r,n){return e.apply(this,arguments)}}()),w=r.curry(((e,n)=>r.pipe(r.entries,r.find((([e,t])=>r.equals(n,t))),r.head)(e))),E=e=>r.pipe(Object.freeze,r.forOwn((r=>T(r)&&!Object.isFrozen(r)?E(r):r)))(e),F=r.curry(((e,n)=>r.isObject(n)||r.isArray(n)?(n=>{const t=n=>r.pipe(r.entries,r.reduce(((n,[i,c])=>{const s=r.cond([[r.isPlainObject,t],[r.isArray,r=>r.map(s)],[r.T,r=>r]]),o=e(i);if(r.has(o,n))throw new Error(`${o} already exist. duplicated property name is not supported.`);return n[o]=s(c),n}),{}))(n);return t(n)})(n):n)),g=F(r.camelCase),O=F(r.snakeCase),A=F(f),P=r.curry(((r,e)=>e(r))),x=r.pipe(r.isNil,a),b=r.curry(((e,n,t)=>{if(r.every(r.isFunction,[e,n]))return r.pipe(e,r.equals(!0))(t)?n(t):t;throw new Error("invalid parameter(s)")})),q=r.curry(((e,n,t)=>{if(r.every(r.isFunction,[e,n]))return r.pipe(e,r.equals(!1))(t)?n(t):t;throw new Error("invalid parameter(s)")})),S=r.curry(((e,n)=>r.pipe(r.includes,P(n),a)(e))),C=r.curry(((e,n)=>r.pipe(r.equals(e),a)(n))),I=r.curry(((e,n)=>{if(r.isArray(n)){const t=r.cloneDeep(n);return t.splice(r.toNumber(e),1),t}return n})),K=r.concat,W=r.curry(((e,n)=>r.isArray(n)?r.concat(n,e):r.concat([n],e))),j=r.curry(((e,n)=>r.map.convert({cap:!1})(e,n))),k=r.curry(((e,n)=>r.forEach.convert({cap:!1})(e,n))),B=r.curry(((e,n,t)=>r.reduce.convert({cap:!1})(e,n,t))),D=e=>r.isNil(e)||r.isBoolean(e)||r.isNumber(e)||r.isString(e),T=r.pipe(D,a),z=e=>r.isNil(e)||r.some(r.equals(e),[0,-0,NaN,!1,""]),J=(({curry:e,getOr:n})=>e(((e,n,t)=>{const i=r.get(n,t);return r.isNil(i)?e:i})))(r);var R={mapAsync:d,filterAsync:h,reduceAsync:v,findAsync:m,forEachAsync:N,promisify:i,then:s,andThen:s,otherwise:o,catch:o,finally:u,isPromise:t,isNotEmpty:p,isNotNil:x,isJson:e=>{const n=r.pipe(r.attempt,r.isError);return r.isString(e)&&!n((()=>JSON.parse(e)))},notEquals:C,isNotEqual:C,isVal:D,isPrimitive:D,isRef:T,isReference:T,not:a,notIncludes:S,toBool:r=>!!r,deepFreeze:E,key:w,keyByVal:w,transformObjectKey:F,toCamelcase:g,toCamelKey:g,toSnakecase:O,toSnakeKey:O,toPascalcase:A,pascalCase:f,isDatetimeString:r=>isNaN(r)&&!isNaN(Date.parse(r)),ap:P,instanceOf:l,ternary:y,ifT:b,ifF:q,removeByIndex:I,removeByIdx:I,removeLast:e=>{const n=r.cloneDeep(e);return r.isArray(e)&&n.pop(),r.isString(e)?n.substring(0,r.size(e)-1):n},append:K,prepend:W,mapWithKey:j,mapWithIdx:j,forEachWithKey:k,forEachWithIdx:k,reduceWithKey:B,reduceWithIdx:B,isFalsy:z,isTruthy:r=>!z(r),getOr:J};export{R as default};
//# sourceMappingURL=lodash-fp-ex.es.js.map
